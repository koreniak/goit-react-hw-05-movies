{"version":3,"file":"static/js/607.1d824474.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/MoviesContainer/MoviesContainer.jsx","pages/Home.jsx","hooks/useFetchTrandingMovies.jsx","helpers/transformMovies.js","helpers/transformMovieById.js","service/movies-service.js","helpers/transformMovieCast.js","helpers/transformMovieReviews.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const MoviesContainer = styled.ul`\n  padding: 16px 16px;\n`;\n\nexport const MovieItem = styled.li`\n  margin-bottom: 8px;\n\n  &:hover {\n    color: #4D5AE5;\n  }\n`;","import PropTypes from 'prop-types';\nimport { Link, useLocation } from \"react-router-dom\";\nimport { routes } from \"routes\";\nimport { MoviesContainer, MovieItem } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <MoviesContainer>\n      {movies && movies.map(({ title, id }) => (\n        <MovieItem key={id}>\n          <Link to={`${routes.MOVIES}/${id}`} state={{ from: location }}>{title}</Link>\n        </MovieItem>\n      ))}\n    </MoviesContainer>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.exact({\n    title: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n  })),\n};\n\nexport default MoviesList;","import PropTypes from 'prop-types';\nimport MoviesList from \"components/MoviesList\";\n\nconst MoviesContainer = ({ movies, error, isLoading }) => (\n  <div>\n    {error && <p>{error}</p>}\n    {isLoading && <p>Is Loading...</p>}\n    {movies.length > 0 && <MoviesList movies={movies} />}\n  </div>\n);\n\nMoviesContainer.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.exact({\n    title: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n  })),\n  error: PropTypes.string,\n  isLoading: PropTypes.bool\n};\n\nexport default MoviesContainer;","import { ToastContainer } from \"react-toastify\";\nimport MoviesContainer from \"components/MoviesContainer\";\nimport { useFetchTrandingMovies } from \"hooks/useFetchTrandingMovies\";\n\nconst Home = () => {\n\tconst { movies, error, isLoading } = useFetchTrandingMovies();\n\treturn (\n\t\t<section>\n\t\t\t<MoviesContainer movies={movies} error={error} isLoading={isLoading} />\n\t\t\t<ToastContainer\n        position=\"top-right\"\n        autoClose={3000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"light\"\n      />\n\t\t</section>\n\t);\n};\n\nexport default Home;","import { useState, useEffect } from \"react\";\nimport { getTrandingMovies } from \"service/movies-service\";\n\nexport const useFetchTrandingMovies = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true)\n    const fetchData = async () => {\n      try {\n        const data = await getTrandingMovies();\n        setMovies(data);\n      } catch (error) {\n        setError(error.status_message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchData();\n  }, [])\n  return { movies, error, isLoading };\n};","export const transformMovies = ({ results }) => {\n  return results.map(({ title, name, id }) =>\n  ({\n    title: title ? title : name,\n    id: id\n  })\n  );\n};","export const transformMovieById = ({ title, name, id, vote_average, overview, genres, release_date, poster_path }) =>\n({\n  title: title ? title : name,\n  id,\n  userScore: `${Math.round(vote_average * 10)}%`,\n  overview,\n  genres: genres.map(genre => genre.name).join(\" \"),\n  releaseDate: new Date(release_date).getFullYear(),\n  poster: `http://image.tmdb.org/t/p/w185${poster_path}`\n});","import axios from 'axios';\nimport { transformMovies, transformMovieById, transformMovieCast, transformMovieRewiews } from 'helpers';\n\nconst options = {\n  method: 'GET',\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {language: 'en-US'},\n  headers: {\n    accept: 'application/json',\n    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyNzlhODIzZTI5MmRhZDEzYTI4NWExOTMxNzJjYzJkOSIsInN1YiI6IjY0YTg0ZGUwOWM5N2JkMDBhZGU5OWNjZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.x6wA3r3IaV30vcsiYQBrUvuHxc8ByDuquBCTZG7iu5o'\n  }\n};\n\nexport const getTrandingMovies = async () => {\n  const { data } = await axios.get('/trending/movie/week', options)\n  const movies = transformMovies(data);\n\n  return movies;\n};\n\nexport const getSearchedMovies = async (query) => {\n  const { data } = await axios.get(`/search/movie?query=${query}`, options)\n  const movies = transformMovies(data);\n\n  return movies;\n};\n\nexport const getMovieDetails = async (id) => {\n  const { data } = await axios.get(`/movie/${id}`, options)\n  const movie = transformMovieById(data);\n\n  return movie;\n};\n\nexport const getMovieCredits = async (id) => {\n  const { data } = await axios.get(`/movie/${id}/credits`, options)\n  const cast = transformMovieCast(data);\n\n  return cast;\n};\n\nexport const getMovieReviews = async (id) => {\n  const { data } = await axios.get(`/movie/${id}/reviews`, options)\n  const reviews = transformMovieRewiews(data);\n\n  return reviews;\n};","export const transformMovieCast = ({ cast }) => {\n  return cast.map(({ character, credit_id, name, profile_path }) =>\n  ({\n    character,\n    credit_id,\n    name,\n    photo: `http://image.tmdb.org/t/p/w45${profile_path}`\n  })\n  );\n};","export const transformMovieRewiews = ({ results }) => {\n  return results.map(({ author, content, id }) =>\n  ({\n    author,\n    content,\n    id\n  })\n  );\n};"],"names":["MoviesContainer","styled","MovieItem","movies","location","useLocation","map","title","id","to","routes","state","from","error","isLoading","length","useState","setMovies","setError","setIsLoading","useEffect","fetchData","getTrandingMovies","data","status_message","useFetchTrandingMovies","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","transformMovies","results","name","transformMovieById","vote_average","overview","genres","release_date","poster_path","userScore","Math","round","genre","join","releaseDate","Date","getFullYear","poster","options","method","baseURL","params","language","headers","accept","Authorization","axios","getSearchedMovies","query","getMovieDetails","movie","getMovieCredits","cast","character","credit_id","profile_path","photo","getMovieReviews","reviews","author","content"],"sourceRoot":""}