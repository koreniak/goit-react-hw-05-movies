{"version":3,"file":"static/js/150.79bb50e8.chunk.js","mappings":"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","sources":["components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails.jsx","hooks/useFetchMovieById.jsx","helpers/transformMovies.js","helpers/transformMovieById.js","service/movies-service.js","helpers/transformMovieCast.js","helpers/transformMovieReviews.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const GoBackButton = styled(Link)`\n  width: 80px;\n  padding: 4px 12px;\n  margin: 8px;\n\n  font-family: inherit;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.5;\n  letter-spacing: 0.04em;\n  text-align: center;\n\n  cursor: pointer;\n\n  background-color: #a70000;\n  color: #F4F4FD;\n  border: none;\n  border-radius: 4px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n\t&:hover {\n\t\tbackground-color: #ff0000;\n\t}\n`;\n\nexport const MovieContainer = styled.section`\n  padding: 8px;\n`;\n\nexport const MovieField = styled.div`\n  display: flex;\n  padding: 8px;\n`;\n\nexport const Info = styled.div`\n  margin-left: 8px;\n`;\n\nexport const MovieTitle = styled.h2`\n  margin-bottom: 20px;\n  color: #2E2F42;\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 12px;\n  color: #434455;\n`;\n\nexport const SubTitle = styled.h3`\n  margin-bottom: 16px;\n  color: #2E2F42;\n`;\n\nexport const AdditionalList = styled.ul`\n  display: flex;\n  margin: 8px 0px;\n`;\n\nexport const AdditionalLink = styled(Link)`\n  padding: 8px;\n  margin: 8px;\n  color: #E7E9FC;\n  background-color: #404BBF;\n  border-radius: 4px;\n`;","import PropTypes from 'prop-types';\nimport { MovieField, Info, MovieTitle, Text, SubTitle } from './MovieInfo.styled';\n\nconst MovieInfo = ({ movie: { title, userScore, overview, genres, releaseDate, poster } }) => (\n  <MovieField>\n    <img src={poster} alt={title} />\n    <Info>\n      <MovieTitle>{`${title} (${releaseDate})`}</MovieTitle>\n      <Text>{`User Score: ${userScore}`}</Text>\n      <SubTitle>Overview</SubTitle>\n      <Text>{overview}</Text>\n      <SubTitle>Genres</SubTitle>\n      <Text>{genres}</Text>\n    </Info>\n  </MovieField>\n);\n\nMovieInfo.propTypes = {\n  movie: PropTypes.object.isRequired\n};\n\nexport default MovieInfo;","import { Suspense, useRef } from \"react\";\nimport { Outlet, useLocation } from \"react-router-dom\";\nimport MovieInfo from \"components/MovieInfo/MovieInfo\";\nimport { useFetchMovieById } from \"hooks/useFetchMovieById\";\nimport { GoBackButton, MovieContainer, AdditionalList, AdditionalLink } from \"components/MovieInfo/MovieInfo.styled\";\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? \"\")\n\n  const { movie, error, isLoading } = useFetchMovieById();\n\n  return (\n    <MovieContainer>\n      <GoBackButton to={backLinkLocationRef.current}>Go Back</GoBackButton>\n      <div>\n        {error && <p>{error}</p>}\n        {isLoading && <p>Is Loading...</p>}\n        <MovieInfo movie={movie} />\n      </div>\n      <AdditionalList>\n        <li><AdditionalLink to=\"cast\">Cast</AdditionalLink></li>\n        <li><AdditionalLink to=\"reviews\">Reviews</AdditionalLink></li>\n      </AdditionalList>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </MovieContainer>\n  );\n};\n\nexport default MovieDetails;","import { useState, useEffect } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { getMovieDetails } from \"service/movies-service\";\n\nexport const useFetchMovieById = () => {\n  const [movie, setMovies] = useState({});\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const data = await getMovieDetails(movieId);\n        setMovies(data)\n      } catch (error) {\n        setError(error.status_message);\n      } finally {\n        setIsLoading(false);\n      };\n    }\n    fetchData();\n  }, [movieId]);\n  return { movie, error, isLoading };\n};","export const transformMovies = ({ results }) => {\n  return results.map(({ title, name, id }) =>\n  ({\n    title: title ? title : name,\n    id: id\n  })\n  );\n};","export const transformMovieById = ({ title, name, id, vote_average, overview, genres, release_date, poster_path }) =>\n({\n  title: title ? title : name,\n  id,\n  userScore: `${Math.round(vote_average * 10)}%`,\n  overview,\n  genres: genres.map(genre => genre.name).join(\" \"),\n  releaseDate: new Date(release_date).getFullYear(),\n  poster: `http://image.tmdb.org/t/p/w185${poster_path}`\n});","import axios from 'axios';\nimport { transformMovies, transformMovieById, transformMovieCast, transformMovieRewiews } from 'helpers';\n\nconst options = {\n  method: 'GET',\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {language: 'en-US'},\n  headers: {\n    accept: 'application/json',\n    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyNzlhODIzZTI5MmRhZDEzYTI4NWExOTMxNzJjYzJkOSIsInN1YiI6IjY0YTg0ZGUwOWM5N2JkMDBhZGU5OWNjZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.x6wA3r3IaV30vcsiYQBrUvuHxc8ByDuquBCTZG7iu5o'\n  }\n};\n\nexport const getTrandingMovies = async () => {\n  const { data } = await axios.get('/trending/movie/week', options)\n  const movies = transformMovies(data);\n\n  return movies;\n};\n\nexport const getSearchedMovies = async (query) => {\n  const { data } = await axios.get(`/search/movie?query=${query}`, options)\n  const movies = transformMovies(data);\n\n  return movies;\n};\n\nexport const getMovieDetails = async (id) => {\n  const { data } = await axios.get(`/movie/${id}`, options)\n  const movie = transformMovieById(data);\n\n  return movie;\n};\n\nexport const getMovieCredits = async (id) => {\n  const { data } = await axios.get(`/movie/${id}/credits`, options)\n  const cast = transformMovieCast(data);\n\n  return cast;\n};\n\nexport const getMovieReviews = async (id) => {\n  const { data } = await axios.get(`/movie/${id}/reviews`, options)\n  const reviews = transformMovieRewiews(data);\n\n  return reviews;\n};","export const transformMovieCast = ({ cast }) => {\n  return cast.map(({ character, credit_id, name, profile_path }) =>\n  ({\n    character,\n    credit_id,\n    name,\n    photo: `http://image.tmdb.org/t/p/w45${profile_path}`\n  })\n  );\n};","export const transformMovieRewiews = ({ results }) => {\n  return results.map(({ author, content, id }) =>\n  ({\n    author,\n    content,\n    id\n  })\n  );\n};"],"names":["GoBackButton","styled","Link","MovieContainer","MovieField","Info","MovieTitle","Text","SubTitle","AdditionalList","AdditionalLink","movie","title","userScore","overview","genres","releaseDate","poster","src","alt","location","useLocation","backLinkLocationRef","useRef","state","from","useState","setMovies","error","setError","isLoading","setIsLoading","movieId","useParams","useEffect","fetchData","getMovieDetails","data","status_message","useFetchMovieById","to","current","Suspense","fallback","transformMovies","results","map","name","id","transformMovieById","vote_average","release_date","poster_path","Math","round","genre","join","Date","getFullYear","options","method","baseURL","params","language","headers","accept","Authorization","getTrandingMovies","axios","movies","getSearchedMovies","query","getMovieCredits","cast","character","credit_id","profile_path","photo","getMovieReviews","reviews","author","content"],"sourceRoot":""}